<?php
/**
 * Created by PhpStorm.
 * User: manuel.gonzalez
 * Date: 25.10.2018
 * Time: 08:00
 */

namespace magp\notify;

use Yii;
use yii\base\Widget;
use yii\helpers\ArrayHelper;
use yii\helpers\Json;


class Notify extends Widget
{
	// Options
	public $icons = [];
	// Setting
	public $setting = [];

	//template
	public $template = <<<HTML
		<div data-notify="container" class="col-xs-11 col-sm-3 alert alert-{0}" role="alert">
			<button type="button" aria-hidden="true" class="close" data-notify="dismiss">Ã—</button>
			<div class="content-box">
				<div class="icon-box"><span data-notify="icon"></span></div>
				<div class="message-box">
					<h4 data-notify="title">{1}</h4>
					<span data-notify="message">{2}</span>
				</div>
			</div>
			<div class="progress" data-notify="progressbar">
				<div class="progress-bar progress-bar-{0}" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0;"></div>
			</div>
		</div>
HTML;

	protected $_offset = 20;
	protected $_spacing = 10;
	protected $_z_index = 1099;
	protected $_progressbar = false;
	protected $_delay = 3000;

	// This controls if the notification will be placed in the left, center or right side of the element.
	const ALIGN_LEFT = 'left';
	const ALIGN_CENTER = 'center';
	const ALIGN_RIGHT = 'right';

	// This controls where if the notification will be placed at the top or bottom of your element.
	const POSITION_TOP = 'top';
	const POSITION_BOTTOM = 'bottom';

	private $flashes;

	public function init()
	{
		parent::init(); // TODO: Change the autogenerated stub
		$session = Yii::$app->getSession();
		$this->flashes = $session->getAllFlashes();
	}

	public function run()
	{
		$view = $this->registerAssets();

		foreach ($this->flashes as $type => $message){

			$setting = ArrayHelper::merge($this->getSetting($type), $this->setting);

			$_optionsDefault = Json::encode($this->getOptions($type, $message));
			$_settingDefault = Json::encode($setting);

			$js = <<<JS
			$.notify({$_optionsDefault}, {$_settingDefault})
JS;
			$view->registerJs($js);
		}
	}

	/**
	 * @param $type
	 * @param $message
	 *
	 * @return array
	 */
	public function getOptions($type, $message)
	{
		$options = [
			'title' => ucwords($type),
			'message' => $message,
			'icon' => $this->arrayIcons($type),
		];
		return $options;
	}

	/**
	 * @param $type
	 *
	 * @return array
	 */
	public function getSetting($type)
	{
		if($type == 'error'){
			$type = 'danger';
		} elseif (!in_array($type, ['error', 'success', 'warning', 'info'])){
			$type = 'default';
		}

		$setting = [
			'offset' => $this->_offset,
			'type' => $type,
			'delay' => $this->_delay,
			'z_index' => $this->_z_index,
			'showProgressbar' => $this->_progressbar,
			'spacing' => $this->_spacing,
			'placement' => [
				'from' => self::POSITION_TOP,
				'align' => self::ALIGN_CENTER,
			],
			'template' => $this->template,
		];
		return $setting;
	}

	/**
	 * @return \yii\web\View
	 */
	public function registerAssets()
	{
		$view = $this->getView();
		NotifyAsset::register($view);
		return $view;
	}

	/**
	 * @param $type
	 * @return array
	 */
	protected function arrayIcons($type)
	{
		$iconsArray = [
			'error' => 'glyphicon glyphicon-minus-sign',
			'info' => 'glyphicon glyphicon-info-sign',
			'warning' => 'glyphicon glyphicon-warning-sign',
			'success' => 'glyphicon glyphicon-ok-sign',
			'default' => 'glyphicon glyphicon-hand-right',
		];
		$icons = ArrayHelper::merge($iconsArray, $this->icons);

		if(in_array($type, ['error', 'success', 'warning', 'info'])){
			return $icons[$type];
		}
		return $icons['default'];
	}
}
